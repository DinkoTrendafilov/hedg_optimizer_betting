# –í—Ö–æ–¥–Ω–∏ –¥–∞–Ω–Ω–∏
print("üé∞ –°–ò–°–¢–ï–ú–ê –ó–ê –•–ï–î–ñ–ò–†–ê–ù–ï - –¢–û–ß–ï–ù –ü–û–î–•–û–î")
print("=" * 60)

coef = [float(x) for x in input("–í—ä–≤–µ–¥–µ—Ç–µ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ (1 X 2): ").split()]
bets = [float(x) for x in input("–í—ä–≤–µ–¥–µ—Ç–µ –∑–∞–ª–æ–∑–∏ (1 X 2): ").split()]

total_income = sum(bets)

print(f"\nüìä –í–•–û–î–ù–ò –î–ê–ù–ù–ò:")
print(f"1: {bets[0]}–ª–≤ @ {coef[0]} ‚Üí –ü–ª–∞—â–∞–Ω–µ: {bets[0] * coef[0]:.0f}–ª–≤")
print(f"X: {bets[1]}–ª–≤ @ {coef[1]} ‚Üí –ü–ª–∞—â–∞–Ω–µ: {bets[1] * coef[1]:.0f}–ª–≤")
print(f"2: {bets[2]}–ª–≤ @ {coef[2]} ‚Üí –ü–ª–∞—â–∞–Ω–µ: {bets[2] * coef[2]:.0f}–ª–≤")
print(f"–û–±—â –ø—Ä–∏—Ö–æ–¥: {total_income}–ª–≤")
print("=" * 60)

# –•–µ–¥–∂–∏—Ä–∞—â–∏ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏ (2% –¥–∏—Å–∫–æ–Ω—Ç)
hedge_coefs = [coef[0] * 0.98, coef[1] * 0.98, coef[2] * 0.98]

payouts = [bets[i] * coef[i] for i in range(3)]

# –°–¢–™–ü–ö–ê 1: –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –∫–∞—Å–∞—Ç–∞ (–Ω–∞–π-–≤–∏—Å–æ–∫ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç)
highest_coef_index = coef.index(max(coef))
cash = payouts[highest_coef_index]
excess = total_income - cash

print(f"\nüí∞ –û–°–ù–û–í–ù–ê –ö–ê–°–ê:")
print(f"   –ö–∞—Å–∞ ({['1', 'X', '2'][highest_coef_index]}): {cash:.0f}–ª–≤")
print(f"   –ò–∑–ª–∏—à—ä–∫: {excess:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 2: –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–∏—Ç–µ
deficits = []
for i in range(3):
    if i != highest_coef_index:
        deficit = payouts[i] - cash
        deficits.append((i, deficit))

print(f"\nüìâ –î–ï–§–ò–¶–ò–¢–ò:")
for i, deficit in deficits:
    print(f"   {['1', 'X', '2'][i]}: {deficit:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 3: –ü–û–ö–†–ò–í–ê–ù–ï –ù–ê –î–ï–§–ò–¶–ò–¢–ò–¢–ï –° –¢–û–ß–ù–ò –°–£–ú–ò
hedge_amounts = [0, 0, 0]
remaining_excess = excess

print(f"\nüõ°Ô∏è –ü–û–ö–†–ò–í–ê–ù–ï –ù–ê –î–ï–§–ò–¶–ò–¢–ò–¢–ï:")
for i, deficit in deficits:
    # –¢–û–ß–ù–ê —Ñ–æ—Ä–º—É–ª–∞: –¥–µ—Ñ–∏—Ü–∏—Ç / –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç
    hedge_amount = deficit / hedge_coefs[i]

    if hedge_amount <= remaining_excess:
        hedge_amounts[i] = hedge_amount
        remaining_excess -= hedge_amount
        print(f"   {['1', 'X', '2'][i]}: {deficit:.0f}–ª–≤ / {hedge_coefs[i]:.2f} = {hedge_amount:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 4: –†–∞–∑–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ –æ—Å—Ç–∞–≤–∞—â–∏—è –∏–∑–ª–∏—à—ä–∫
print(f"\nüîÑ –†–ê–ó–ü–†–ï–î–ï–õ–Ø–ù–ï –ù–ê –û–°–¢–ê–¢–™–ö–ê:")
print(f"   –û—Å—Ç–∞–≤–∞—â –∏–∑–ª–∏—à—ä–∫: {remaining_excess:.0f}–ª–≤")

if remaining_excess > 0:
    # –°—É–º–∞ –Ω–∞ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç–∏—Ç–µ –∑–∞ –¥–≤–∞—Ç–∞ –¥—Ä—É–≥–∏ –∏–∑—Ö–æ–¥–∞
    other_outcomes = [i for i in range(3) if i != highest_coef_index]
    sum_other_coef = hedge_coefs[other_outcomes[0]] + hedge_coefs[other_outcomes[1]]

    base_amount = remaining_excess / sum_other_coef

    print(f"   –ë–∞–∑–æ–≤–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç: {remaining_excess:.0f} / {sum_other_coef:.2f} = {base_amount:.0f}–ª–≤")

    for i in other_outcomes:
        other_coef = hedge_coefs[[x for x in other_outcomes if x != i][0]]
        additional_hedge = other_coef * base_amount
        hedge_amounts[i] += additional_hedge
        print(f"   {['1', 'X', '2'][i]}: {other_coef:.2f} √ó {base_amount:.0f} = {additional_hedge:.0f}–ª–≤")

# –°–¢–™–ü–ö–ê 5: –§–ò–ù–ê–õ–ù–ò –†–ï–ó–£–õ–¢–ê–¢–ò
print(f"\nüé≤ –§–ò–ù–ê–õ–ù–ê –°–ò–ú–£–õ–ê–¶–ò–Ø:")
print("=" * 60)

total_hedge = sum(hedge_amounts)
final_cash = total_income - total_hedge

for i in range(3):
    outcome = ["1", "X", "2"][i]
    payout = payouts[i]

    hedge_income = hedge_amounts[i] * hedge_coefs[i]
    result = final_cash + hedge_income - payout

    margin = (result / total_income) * 100

    print(f"üîÆ {outcome}:")
    print(f"   –ö–∞—Å–∞: {final_cash:.0f}–ª–≤")
    if hedge_income > 0:
        print(f"   –•–µ–¥–∂: +{hedge_income:.0f}–ª–≤")
    print(f"   –ü–ª–∞—â–∞–Ω–µ: -{payout:.0f}–ª–≤")
    print(f"   –†–ï–ó–£–õ–¢–ê–¢: {result:.0f}–ª–≤ ({margin:+.1f}%)")
    print("-" * 40)

print(f"\nüìà –û–ë–©–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
print(f"   –ü—Ä–∏—Ö–æ–¥: {total_income:.0f}–ª–≤")
print(f"   –•–µ–¥–∂: {total_hedge:.0f}–ª–≤")
print(f"   –ö–∞—Å–∞: {final_cash:.0f}–ª–≤")
print("=" * 60)